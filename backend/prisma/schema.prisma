// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  EMPLOYEE
}

enum VehicleType {
  CARRO
  MOTO
  CAMIONETA
  CAMION
}

enum VehicleStatus {
  ACTIVO
  INACTIVO
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  phone     String?
  role      UserRole @default(EMPLOYEE)
  
  // Campos para verificación de cuenta
  isVerified          Boolean  @default(false)
  verificationToken   String?  @unique
  verificationExpires DateTime?
  
  // Campos para recuperación de contraseña
  resetPasswordToken   String?   @unique
  resetPasswordExpires DateTime?
  
  // Campos de auditoría
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime?
  
  // Relación con vehículos registrados
  vehicles Vehicle[]
  
  @@map("users")
}

model Vehicle {
  id        Int      @id @default(autoincrement())
  
  // Información del vehículo
  plate        String   // Placa (permite múltiples registros para historial)
  type         VehicleType
  color        String?
  brand        String?  // Marca
  model        String?  // Modelo
  
  // Información del propietario
  ownerName    String
  ownerPhone   String?
  ownerEmail   String?
  
  // Control de entrada/salida
  entryTime    DateTime  @default(now())
  exitTime     DateTime?
  parkingSpace String?   // Ej: A-15, B-08
  
  // Estado
  status       VehicleStatus @default(ACTIVO)
  
  // Observaciones
  observations String?
  
  // Usuario que registró
  registeredById Int
  registeredBy   User @relation(fields: [registeredById], references: [id])
  
  // Campos de auditoría
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("vehicles")
  @@index([plate])
  @@index([status])
  @@index([entryTime])
}
